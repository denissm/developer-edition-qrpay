version: '3.3'

services:
  traefik:
    image: traefik:v2.0
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./configs/traefik.yaml:/traefik.yaml
  cop:
    image: tokend/traefik-cop:1.0.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/cop.yaml:/config.yaml
    entrypoint: sh -c "traefik-cop run"
  upstream:
    image: nginx
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    volumes:
    - ./configs/nginx.conf:/etc/nginx/nginx.conf
    ports:
    - "8000:80"
  adks:
    image: tokend/adks:1.0.0
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    depends_on:
      - horizon
      - adks_db
    ports:
      - 8006:80
    volumes:
      - ./configs/adks.toml:/config.toml
  adks_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=adks
      - POSTGRES_PASSWORD=adks
      - POSTGRES_DB=adks
      - PGDATA=/pgdata
    volumes:
      - adks-data:/pgdata
  core:
    image: tokendconto/core:3.6.5-rc.0-nc
    depends_on:
      - traefik
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
      - PGDATA=/data/pgdata
      - ENSUREDB=1
      - CONFIG=/core-config.ini
    volumes:
      - ./configs/core.ini:/core-config.ini
      - core-data:/data
    labels:
      - "autoheal=true"
      - "traefik.enabled=false"
  horizon:
    image: tokend/horizon:3.8.4
    depends_on:
      - core
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/data/pgdata
    volumes:
      - ./configs/horizon.yaml:/config.yaml
      - horizon-data:/data
  api:
    image: tokend/identity:4.5.5-rc.1
    restart: unless-stopped
    depends_on:
      - horizon
      - api_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/api.yml:/config.yaml
    command: run
  api_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api
      - PGDATA=/pgdata
    volumes:
      - api-data:/pgdata
  initscripts:
    image: tokend/terraform-provider-tokend:1.3.0
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
      - storage
    restart: on-failure
    volumes:
      - ./terraform:/opt/config
    entrypoint: ""
    command: /opt/config/apply.sh
  conto_client:
    image: tokendconto/web-client:1.7.0-rc.1
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    volumes:
      - ./configs/conto.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8061:80
  admin_client:
    image: tokendconto/admin-panel:1.1.0-rc.0
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    volumes:
      - ./configs/client.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8071:80
  qrp_client:
    image: qr-pay-web-client:0.1.2
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    volumes:
      - ./configs/conto.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8060:80
  qrp_admin_client:
    image: qr-pay-admin-panel:0.1
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    volumes:
      - ./configs/client.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8070:80
  storage:
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    entrypoint: "sh"
    command: -c "mkdir -p /data/tfstate && minio server /data"
    environment:
      - MINIO_ACCESS_KEY=miniominio
      - MINIO_SECRET_KEY=sekritsekrit
      - MINIO_BROWSER=off
    volumes:
      - storage-data:/data
  dns:
    image: tokend/dns:0.4.0-rc.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - dns_db
    volumes:
      - ./configs/dns.yaml:/config.yaml
    entrypoint: sh -c "dns-svc migrate up && dns-svc run"
  dns_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=dns
      - POSTGRES_PASSWORD=dns
      - POSTGRES_DB=dns
      - PGDATA=/pgdata
    volumes:
      - dns-data:/pgdata

  sponsorship:
    image: tokend/sponsor:0.2.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - sponsorship_db
    volumes:
      - ./configs/sponsorship.yaml:/config.yaml
    entrypoint: sh -c "sponsor-svc migrate up && sponsor-svc run sponsorship"

  sponsorship_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sponsorship
      - POSTGRES_PASSWORD=sponsorship
      - POSTGRES_DB=sponsorship
      - PGDATA=/pgdata
    volumes:
      - sponsorship-data:/pgdata

  csv:
    image: tokend/csv:0.1.2-rc.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
    volumes:
      - ./configs/csv.yaml:/config.yaml
    entrypoint: sh -c "csv-svc run csvproxy"

  asset_remover:
    image: tokend/asset-remover-svc:0.1.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
    volumes:
      - ./configs/asset-remover.yaml:/config.yaml
    entrypoint: sh -c "asset-remover-svc run assetchecker"

  proxy_payments:
    image: tokend/proxy-payments:0.2.1
    labels:
      - "traefik.http.services.proxy_payments.loadbalancer.server.port=80"
      - "traefik.http.routers.proxy_payments.rule=PathPrefix(`/integrations/payment-proxy/`)"
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - proxy_payments_db
    volumes:
      - ./configs/proxy-payments.yaml:/config.yaml
    entrypoint: sh -c "proxy-payments-svc migrate up && proxy-payments-svc run"
  proxy_payments_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=proxy_payments
      - POSTGRES_PASSWORD=proxy_payments
      - POSTGRES_DB=proxy_payments
      - PGDATA=/pgdata
    volumes:
      - proxy-payments-data:/pgdata

  marketplace:
    image: tokend/marketplace-svc:0.3.4-rc.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - marketplace_db
    volumes:
      - ./configs/marketplace.yaml:/config.yaml
    entrypoint: sh -c "marketplace-svc migrate up && marketplace-svc run"
  marketplace_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=marketplace
      - POSTGRES_PASSWORD=marketplace
      - POSTGRES_DB=marketplace
      - PGDATA=/pgdata
    volumes:
      - marketplace-data:/pgdata


  ## 3rd party

  autoheal:
    image: willfarrell/autoheal
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - AUTOHEAL_START_PERIOD=60
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ##
  ## Integration services
  ##

  notificator:
    image: tokend/notificator:0.5.2
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    depends_on:
      - horizon
      - notificator_db
    volumes:
      - ./configs/notificator.yaml:/config.yaml
    command:
      - "notificator"
      - "--config"
      - "/config.yaml"
      - "--migrations"
      - "/migrations"
      - "run"
  notificator_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=notificator
      - POSTGRES_PASSWORD=notificator
      - POSTGRES_DB=notificator
      - PGDATA=/pgdata
    volumes:
      - notificator-data:/pgdata
  templatesprovider:
    image: tokend/templates-svc:1.0.0
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/templatesprovider.yaml:/config.yaml
    command:
      - 'run'
      - 'service'
  # Additional
  pga:
    container_name: df_pga
    image: dpage/pgadmin4
    volumes:
      - pga:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=ru5t.new@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=ru5t_123
    ports:
      - "5050:80/tcp"
volumes:
  adks-data:
  api-data:
  core-data:
  horizon-data:
  storage-data:
  dns-data:
  notificator-data:
  proxy-payments-data:
  marketplace-data:
  sponsorship-data:
  pga:
